<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAABAAAAAAAAAAAaFw8BZGlxCT1D
        UyUjJzZRNURgdkBZg09JXIAjSU9cCQAAAAUAAAAFAAAABgAAAAgAAAAIAAAACAAAAAcAAAAHAAAABgAA
        AAUAAAAEAAAAAwAAAAEAAAABAAAAAQAAAAIAAAACAAAAAgAAAAMAAAACAAAAAUpMUAU5P0sTP0VRLDY+
        T18xOk6VKDBDwxgdLeokNlb3NU986EBbi75KZ5iMSF2AUj5MZCcoLDQWAwMDDQAAAA4AAAAOAAAADQAA
        AAwAAAAKAAAACQAAAAcAAAAFAAAAAgAAAAMAAAAEAAAABAAAAAQGBQUGLiwsCkJFTh48Q1JCOEFTcioy
        RK0fJjjYICk88R4nPP8dJjn/Hyc6/yw+X/8xSnX/LkVv/zdTg/04U4DqM0pyzFBYbJdNVGRgMT1TORoe
        JB4DAwMWAAAAEgAAABEAAAAOAAAACgAAAAgAAAAEAAAABQkJCQYzNz8UMThFKzg9S1FFQESKMjI9uyMs
        PuMjLUP6HCU5/xwkN/8cJTf/GyI0/x8nOv8gKTv/JzZS/y5Fbv8lN1n/L0dw/zNNef8jN1r/PUdf/T1J
        Y/EwRmvPOE5yojdGYWosNUc+HiQuIwMDAhIAAAAOAAAAC0NHTxM7Qk45OkNXZjM7T5wnMELRHSQ17Cop
        MvsfICz/Hic7/ygzS/8gKT7/GiIz/xceLv8gKDz/IyxB/yApPP8jMUz/KT5j/yg9Yf8oO1//Kj1f/yAw
        TP8jM1L/IjFP/ytBaP80T3z9K0Fm8So9X9k4TXCkPVJ1bTpJYzwnLDcYPERVlCEoOtkjLEL2JC1E/x0m
        Of8UGij/Fhwr/xYcLP8bIjT/GSAw/x4lOP8aIDH/Exgn/xkgMf8fJzr/Iis//yIwSv8fME3/IzNT/yU3
        WP8lNFH/JDRR/yU4Wf8kN1f/LEFm/zZQff8rQWb/KD1i/y1Fbv8zTHf1MUZt1is7Wqo0PE7OGSAz/xUb
        K/8gKDz/HiQ2/xUaKP8ZIDH/HSU2/xgfL/8TGCX/Fhwr/xYcK/8UGSf/FRoo/xceLv8TGCX/Gyc9/yI0
        Uv8gME3/IjRT/yQ2VP8mOFj/KT5h/yk9Yf8jNVT/IDBO/yo+Yv8rQGb/KDtg/yk+Y/8tRm//KT5m+jI6
        TMwbIzf/GB4v/xgfL/8bHy3/GR8u/x4mOf8bIjP/FRso/xYbKf8WHCr/FRso/xAUIP8TGSb/Gx8q/xYX
        H/8XITX/ITJP/x4tSP8gME3/IzVU/yY6Wv8qPmH/JDZV/x4tSf8cK0X/KDxg/yM1Vv8iM1T/Mkp1/zZQ
        fv81UYD6LDJDzRoiNP8cIzX/GB4v/xogMf8cJDX/HSU3/xkgMP8eHiX/HSAo/xkhMP8UGib/ERYh/xUc
        Kf8hISj/Hh0k/xcgMv8fMEv/Hi5J/yIzUf8nO1z/Jzpb/yIzUP8gME3/JzNJ/yQyS/8gMVD/HzBP/yM0
        Vf8zS3f/OFSE/zZRgPoqMEDNEhgn/xohMv8aIjL/GyIy/x8nOf8ZIDD/Fx4s/xkaI/8aHir/HSQ2/xIX
        JP8TGCX/GyIx/xYbJ/8QFSD/FR8y/x4uSf8aKD//HStD/yk6WP8oN1D/KzpW/yc5Wf8/RVP/QUhX/0dR
        ZP9bY3L/ZWx6/z5Oa/85Von/QWGY+i41Rs0WHC3/Fx0t/xoiM/8dJjf/GSAw/xsjNP8bIjH/ERUg/xIY
        Jf8ZHy3/HyMt/xkeLP8aITD/NDhC/0JFTf9WXGf/SFFh/2Jnc/9QVmL/dHiD/3J2gP9rc4T/KDhT/4OH
        kv98f4j/mZul/4aLmP92fIz/QFN0/zFMev83VIX6MThKzRoiNP8kKjj/PUNR/zU8TP9LT1r/HiMv/y8z
        P/9rbXb/IiYx/zM3Qv+Fh5H/KS04/w8TH/9vcnr/mZuk/4eKlP9hZXH/lZii/3V4gv+SlZ//h4qU/4mM
        lv9laXT/mZym/4KEjv+Vmab/MD9c/yY6X/81TXj/OUxv/yc5WvotM0PMGiM2/zY7Sf+Vl6H/U1Zg/5eZ
        o/9DR1D/Jio0/5yeqP9PUl3/Ki88/5qcpv9maHH/SUtT/3F0fP+anab/d3mD/19jbv+anab/oKKt/4mM
        lv+FiJL/qqy2/62wuf+ipK7/f4GJ/4iMl/9BTGH/Q1d7/z1ai/9TX3j/PExr+i00RMwcJTj/GiAv/3J1
        f/+LjZb/nJ6n/3F0ff9ER1D/pqiy/5iapP9XWmT/hoiS/5yep/+Ym6T/dniB/5mbpf91eYT/YWd1/5ia
        pP+Vl6D/kpSe/46Rmv+Ok6D/e4GP/5WYo/+Ag4//m5+s/4iNmf9cbIv/QWGZ/ztTff82Tnj6MThKyxsj
        Nv8YHzH/Sk9e/6Snsf95fIb/kZOc/4iJkv+WmaP/bG97/5aYov9/goz/nZ+o/5qcpv9wcnv/lZii/4iM
        mP9fZXT/dHuM/36Gmv9tcX//XWR0/z1ObP8xRWj/RVh7/zVGZf89UHT/OVF4/y5FbP8xSXT/KT9n/zBJ
        dfk0PE7KGiI1/yIrQf8zPVP/homV/1FVYf9rb3r/Zml0/19kcv8jKzr/S1Bc/zk+Sv9DSFP/NDlF/yEm
        Mv8kKTb/KzpT/yxAZf8rQGb/NE57/zlMb/81SGz/KT9m/zhTg/9CY5v/MEdy/zJMef86WIr/MUl1/y1D
        bP8qQGf/LUNt+TA3SMoZITT/Iy1D/yMsQv89OkL/LC05/xMaJ/8VHCr/Fhwr/xUbK/8TGir/DhIc/w0S
        G/8MFCH/DhUi/wcNFv8ZKUL/Mkhx/zVNd/9AXpP/Mkt6/zBIdv8rQWn/Jzpf/zRNev8yTHj/PlyR/0dq
        pf81UYD/MEl1/zdThP85Vof5O0RbyR0mO/8bIzb/HSU3/yYpN/8cIjD/CQ8a/wsRHP8OEyD/DxQi/wwT
        Hf8NDxP/DhIZ/wkPGv8IDhb/BQoR/xYmOP84RVv/NkJc/y9GdP8mQFv/MVBx/zJLd/8nO2D/IjNW/yk+
        Zf80TXz/NVGB/zJLeP82UYH/NE99/zhUhfk5Q1jJGCAy/x4mOf8jLUT/GSE0/w4XJP8KEh3/DxYj/w4X
        IP8IEBf/Ch0W/woWFP8HDRX/CRoY/wYeEP8CDQv/H0I9/zFVVf8aKi7/LFFZ/x9QQP8yb2b/K0Fp/ytA
        av8mO13/IzZY/yc6Yf8sO1z/LkNp/zFKdv8wSXb/OliL+TE4SskVHC3/Hic7/yg0Sf8WIiv/Bw4Y/wgO
        Gf8KDxr/Cx8Y/w4oGv8SMyD/JUY0/xAoHv8KKBf/CisV/wYeD/8SNyT/K2tT/x1LOv9GlHn/Jm5K/ydp
        Uv8aMkH/Gi9A/xlDPf8eRUn/GS8+/0NWX/88TW//Mk18/y9Hc/8+XpX5Nj9TyRgfMP8XHS//HS81/xw+
        K/8FCxD/BQ0T/wgRFf8dPyr/J1c2/xlEKf8uYEH/IVEx/xlGJ/8VQCP/Ejcf/xVCKf8yhlz/KG1M/0OV
        eP8wgl3/KmhW/x1QP/8iXEP/DDAg/ydoTv8lZkj/M2te/zBDav8zTHz/KT1l/y1FcPkpLjzHERMZ/xAV
        G/8OJRz/FUEj/wcVE/8LIRf/CSIW/xY7I/8dSS3/FD0k/x1MLf8dTiz/GE4o/xJEH/8iVzP/JWVC/zmW
        af8wglv/IF1A/zKBX/8uZF//JmJS/yNnRv8LMx7/NI5g/zeMY/8sbVb/Nl50/yU6W/8gMVD/Kj5n+SU3
        M9MKEBL/DyEa/xAzHv8QLh3/CRoV/xc/Jf8SPCD/DzQb/w4xG/8YQyf/E0Ei/yNcOP8gXzX/KHFE/zmL
        Wf9Am2f/R6x5/z+ZbP8gZz3/Lopa/yVrS/8SRSv/IGlE/xVRL/8kd03/JGdH/z2Ha/80bmX/GEM8/xVC
        NP8qVmP6LVQ95BQtIv8bPCv/Gj8q/yBBMP8QKx3/F0gm/x9QL/8nXTv/HVcy/ytwRP8naz//Ln9P/ydy
        Qf84lGD/NYpZ/1Svff9mypb/ULF5/zKMUv83lmD/NZBh/yBqPv8ui1v/KHhO/xZZMv8wflr/OoZn/xZX
        M/8ibkj/GVg1/yZmVf4iUDLnFz8m/yRTNv8XQib/GEYn/yFTMf8bUy//MnlO/0aibf9Aomf/M41T/zST
        Wf87pGb/NI9X/0Slbv9KpnH/WLaB/0yweP9Enmb/OJ1g/0mpc/9RtX3/OZhe/zmbYf81jV7/LXxP/z6e
        bv8uhFr/HGc+/yl+U/8ZWjf/KX5W/RtEKfgVQSP/G1It/yFfNv8fWTH/MHFI/ziSYf9Lr3z/Tqdz/0Wl
        bP85lFz/LIFK/y6OVf83k1z/Radu/0CUYP9An2j/MpZd/zaPWP9ErXH/Sqx2/0idaf9In2//PZdi/zmc
        Yf8yhVP/O5pm/zCNXv87jWL/KnNM/w9LJ/8jf1D9M3ZM2Cx8SfEreUb+LYNO/ydzQv83ll7/O5Zg/0+t
        e/9Lqnb/P5tj/zCQVf9DoGn/VLF8/0Oob/9IrnL/QaVr/0uudf9NtX3/Saly/0uncP9Ssn7/PZNg/0GX
        Zv83h1b/OZNf/yNtPf89m2T/QaRt/1WvgP9Uq3//OI1e/zWXYv5mu4gyWK96X0uebLxEm2nwJXNA+DCQ
        Vf81lF3/OIpY/0mmdP85m2P/PaBk/0qmdf8+k2D/N5ph/0GXZP9YvIj/UbR7/0uqcf89lGL/NINT/0Cm
        bv80ll3/K4VL/zuVX/9Ammf/L4tS/zeXXv86kVv/UrV/+lKzgfFAoGznTK12paXCsQCosKcBf8SgH2q4
        jUZLlmdsQp5nwUCpb+NHqXLwSqVw/z6eaP8+mGL/RaVv/zOMV/84mGH/NYxY/0WpcP9Am2L/O5BZ/z+X
        Zv8tgk3/LIhQ/ziHVf9Mp3L/SK90/0ipcfpHpmzrUa994kSbZ6tOrHF9ZbyKSl+7iT1yvpcRAAAAAAAA
        AAAAAAAAq9W9AMTdzgJtv5AkacaTPmO0hF9KoWu/L4JO4y1+SvlAqnD/NpVd/zeWW/85nmP/M4lR/yyD
        Sf8ti1H/PZlk/02pd/89mGH/U656/WG9jNxctYOzcsqcgWO6iU1qxpVCg9CqEFeobQPQxb0AusazAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB9so8AhbKUAmKxfxxPlmg2S6NuiFG5f6s3ilbDKoJI8iyM
        Uv4yiFP/O6Jm/kOmbPxFomz8PqBp8D+cZL5cu4qadsuhPXrOnhSl4L0Gds+bAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1P/6AOz//wCU57sGkd2wCnG1
        iiRWq3eCTqp00k6sdeZOtnzWVLJ+sFOqdpdKpnF5X7OCHYPIngi85dYBrt7IAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/zAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAIAAAADwAAAH/gAAf//AAf8=
</value>
  </data>
</root>